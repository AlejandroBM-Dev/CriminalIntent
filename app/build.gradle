plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.raiserdev.criminalintent"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions{
            annotationProcessorOptions{
                arguments += [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                ]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.3'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1'

    //MATERIAL COMPONENTS_
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation "com.google.android.material:material:1.6.1"

    //COROUTINES_
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'

    //TESTING_
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    debugImplementation "androidx.fragment:fragment-testing:1.5.2"

    //DATABASE_
    implementation 'androidx.room:room-runtime:2.4.3'
    implementation 'androidx.room:room-ktx:2.4.3'
    kapt 'androidx.room:room-compiler:2.4.3'

    //NAVIGATION
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    
}

//ANOTACIONES_

/**
 * *** kapt ***
     Kapt es la herramienta de procesamiento de anotaciones de Kotlin, y está en muy buena forma en estos días. Si quieres poder hacer referencia al código generado por Kotlin, tienes que usar kapt. Para ello, simplemente incluya el plugin en su archivo build.gradle con la línea:

        aplicar plugin: 'kotlin-kapt'

     Y donde normalmente usaría la palabra clave annotationProcessor para especificar la dependencia de su procesador, en su lugar usaría la palabra clave kapt.
 */